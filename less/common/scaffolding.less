//
// Scaffolding
// ---


// Reset the box-sizing
* {
    .box-sizing(border-box);
}
*:before,
*:after {
    .box-sizing(border-box);
}


// Body reset
html {
    font-size: 100%;
    -webkit-tap-highlight-color: rgba(0,0,0,0);
}

body {
    font-family: @font-family-base;
    font-size: @font-size-base-px;
    font-size: @font-size-base-rem;
    line-height: @line-height-base;
    color: @text-color;
    background-color: @body-bg;
}

// Reset fonts for relevant elements
input,
button,
select,
textarea {
    font-family: inherit;
    font-size: inherit;
    line-height: inherit;
}


// Links
a {
    color: @link-color;
    text-decoration: none;
    font-weight: @font-weight-strong;

    &:hover,
    &:focus {
        color: @link-hover-color;
        text-decoration: @link-hover-decoration;
    }

    &:focus {
        .tab-focus();
    }
}

// Images
img {
    vertical-align: middle;
}

// Horizontal rules
hr {
  margin-top:    @dimension-spacing-default;
  margin-bottom: @dimension-spacing-default;
  border: 0;
  border-top: 1px solid @hr-border;
}


// Only display content to screen readers
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0,0,0,0);
  border: 0;
}

// Use in conjunction with .sr-only to only display content when it's focused.
.sr-only-focusable {
  &:active,
  &:focus {
    position: static;
    width: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    clip: auto;
  }
}


// iOS "clickable elements" fix for role="button"
//
// Fixes "clickability" issue (and more generally, the firing of events such as focus as well)
// for traditionally non-focusable elements with role="button"
// see https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile

[role="button"] {
  cursor: pointer;
}
