// Includes
@import '../includes/variables';
@import '../includes/mixins';

//
// Default button
// ===

.button {
    .user-select(none);
    display: inline-block;
    margin-bottom: 0;
    vertical-align: middle;
    touch-action: manipulation;
    cursor: pointer;
    font-weight: normal;
    text-align: center;
    padding: (@dimension-padding-base + 2) (@dimension-padding-lg + 4);
    .transition(box-shadow ease-in-out .15s);
    .button-style();

    &:hover,
    &:focus {
        text-decoration: none;
    }
}

//
// Disabled button
// ===

// disabled attribute can be used on buttons
// .disabled class should be used on links as links do not have a disabled attribute

.button {
    &.button--disabled,
    &[disabled] {
        pointer-events: none;
        .button-style(@colour-grey-lightest, @colour-grey-light, @colour-grey-lighter, transparent);
        #gradient > .vertical(transparent, transparent);
        .box-shadow(none);

        &:active,
        &:hover,
        &:focus {
            .focus-reset();
            #gradient > .vertical(transparent, transparent);
        }
    }
}

//
// Button styles
// ===
.button--primary {
    .button-style(@colour-accent, @colour-white, darken(@colour-accent, 5%), @colour-accent);
}

//
// Button Sizes
// ===
.button--sm {
    .font-size(0.85);
    padding: @dimension-padding-base @dimension-padding-lg;
}

.button--lg {
    .font-size(1.25);
    padding: (@dimension-padding-lg - 2) (@dimension-padding-lg + 8);
}

//
// Buttons with icons
// ===
.button--continue {
    .button-icon("\f054");

    &:hover,
    &:focus {
        &:after {
            right: 0.3em;
        }
    }
}

.button--back {
    .button-icon("\f053", left);

    &:hover,
    &:focus {
        &:after {
            left: 0.3em;
        }
    }
}

//
// Block buttons
// ===
.button--block {
    .button-block();
}

// Vertically space out multiple block buttons
.button--block + .button--block {
    margin-top: @dimension-padding-base;
}

//
// Responsive block buttons
// ---

// Buttons that are block (100% width) at certain breakpoints
// mostly used for mobile so we don't account for all breakpoints
.button--block-xs,
.button--block-sm {
    .button-block();
}

@media (min-width: @screen-xs-min) {
    .button--block-xs {
        .button-block-reset();
    }
}

@media (max-width: @screen-xxs-max) {
    .button--block-xs + .button--block-xs {
        margin-top: @dimension-padding-base;
    }
}

@media (min-width: @screen-sm-min) {
    .button--block-sm {
        .button-block-reset();
    }
}

@media (max-width: @screen-xs-max) {
    .button--block-sm + .button--block-sm {
        margin-top: @dimension-padding-base;
    }
}

//
// Button group
// ---

.button-group {
    margin-bottom: 1em;

    .button {
        position: relative;
        display: inline-block;
        border-radius: 0;
        margin-right: -0.4em;

        &:focus {
            z-index: @z-index-base;
        }

        &:first-child {
            border-top-left-radius: @dimension-border-radius;
            border-bottom-left-radius: @dimension-border-radius;
        }

        &:last-child {
            border-top-right-radius: @dimension-border-radius;
            border-bottom-right-radius: @dimension-border-radius;
        }
    }
}
