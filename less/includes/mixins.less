// Grab bootsrap mixins
@import "../../node_modules/bootstrap/less/mixins";

//
//  States
// ---
.tab-focus(@colour: @link-colour, @text-colour: @colour-white) {
    outline: none;
    background-color: @colour;
    color: @text-colour;
    text-decoration: none;
    .box-shadow(0 0 0 2px @colour);
}

.button-focus(@colour: @link-colour) {
    outline: none;
    .box-shadow(0 0 0 2px @colour);
}

.button-active(@colour: @colour-grey-lighter) {
    .box-shadow(inset 0 1px 4px @colour);
}

.form-focus(@colour: @colour-brand) {
    outline: none;
    @shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 0 2px @colour;
    .box-shadow(@shadow);
}

//
// State resets
// ---
.focus-reset() {
    outline: none;
    .box-shadow(none);
}

.button-reset() {
    .box-shadow(none);
    .reset-filter();
    background-image: none;
    background-color: transparent;
    border-color: transparent;
}

.panel-link-reset() {
    color: @text-colour;
    font-weight: @font-weight-base;
    text-decoration: none;

    &:hover,
    &:focus {
        outline: none;
        text-decoration: none;
        background-color: @colour-white;
        border-color: @colour-brand;
        color: @text-colour;
    }

    &:focus {
        .box-shadow(0 0 0 2px @colour-brand);
    }
}

//
// Fonts
// ---
.graze-font-cursive() {
    font-family: "graze-font-cursive", @font-family-serif;
    font-weight: @font-weight-strong;
    letter-spacing: -0.02em;
}

.graze-font() {
    font-family: "graze-font", @font-family-sans-serif;
    font-weight: @font-weight-strong;
    letter-spacing: -0.04em;
}

.monospaced() {
    font-family: "Lucida Console", Monaco, monospace;
}

//
// Lists
// ---
.list-unstyled-style() {
    list-style: none;
    padding: 0;

    li {
        &:before {
            display: none;
        }
    }
}

// Inline turns list items into inline-block
.list-inline-style() {
    .list-unstyled-style();
    display: inline-block;

    > li {
        display: inline-block;
        padding: 0;
        .margins(0, 0.5, 0, 0);
    }
}

//
// Nav styles
// ---
.nav-item-style(
        @text: @colour-brand,
        @hover-text: @colour-grey-dark,
        @bg: transparent,
        @hover-bg: @colour-grey-lighter,
        @border: @colour-grey-lighter,
        @focus-border: @colour-grey-lighter
    ) {
    border: 1px solid transparent;
    color: @text;
    background: @bg;
    text-decoration: none;

    &:hover,
    &:focus {
        color: @hover-text;
        background: @hover-bg;
        border: 1px solid @border;
    }

    &:focus {
        .focus-reset();
        border: 1px solid @focus-border;
    }
}

.nav-item-style-active(
        @text: @colour-white,
        @hover-text: @colour-white,
        @bg: @colour-brand,
        @hover-bg: @colour-brand,
        @border: @colour-brand,
        @focus-border: @colour-brand
    ) {
    color: @text;
    background: @bg;
    border: 1px solid @border;

    &:hover,
    &:focus {
        color: @hover-text;
        background: @hover-bg;
        border: 1px solid @border;
    }

    &:focus {
        .focus-reset();
        border: 1px solid @focus-border;
    }
}

//
// Buttons
// ---
.button-style(@colour: @colour-grey-lightest, @text: @text-colour, @border: @border-colour, @border-focus: @colour-brand) {
    @colour-dark: darken(@colour, 4%);
    @colour-light: lighten(@colour, 4%);
    @colour-shadow: darken(@colour, 10%);
    color: @text;
    text-decoration: none;
    border: 1px solid @border;
    background-color: @colour;
    #gradient > .vertical(@colour-light, @colour);
    border-radius: @dimension-border-radius;
    .box-shadow(inset 0 -.1em 0 @colour-shadow);

    &:hover,
    &:focus {
        #gradient > .vertical(@colour, @colour-dark);
        color: @text;
    }

    &:focus {
        .button-focus(@border-focus);
    }

    &:active {
        .button-active(darken(@colour-dark, 10%));
    }

    &.button--active {
        #gradient > .vertical(darken(@colour-light, 4%), @colour-dark);
        .button-active(@border-focus);
        color: @text;
        pointer-events: none;
    }
}

.button-block() {
    display: block;
    width: 100%;
    margin-bottom: @dimension-padding-base;
}

.button-block-reset() {
    display: inline-block;
    width: auto;
}

.button-icon(@icon-code: "\f054"; @position: right) {
    position: relative;

    & when (@position = left) {
        padding-left: 2em;
    }

    & when (@position = right) {
        padding-right: 2em;
    }

    &:after {
        content: @icon-code;
        .icon();
        .backface-visibility(hidden);
        .transition(all 0.2s ease-out);
        .opacity(0.8);
        position: absolute;
        top: 0.75em;

        & when (@position = right) {
            right: 0.5em;
        }

        & when (@position = left) {
            left: 0.5em;
        }
    }

    &:hover,
    &:focus {
        &:after {
            .opacity(1);
        }
    }
}

//
// Form states
// ---
.form-control-validation(@text-colour: @text-colour; @border-colour: @border-colour; @background-color: #f5f5f5) {
    // Color the label and help text
    label,
    .form-group__help-block,
    .radio,
    .checkbox,
    .radio-inline,
    .checkbox-inline,
    &.radio label,
    &.checkbox label,
    &.radio-inline label,
    &.checkbox-inline label  {
        color: @text-colour;
    }

    // Set the border and box shadow on specific inputs to match
    .form-control {
        border-color: @border-colour;
        .box-shadow(inset 0 1px 1px rgba(0,0,0,.075)); // Redeclare so transitions work

        &:focus {
            .form-focus(@border-colour);
        }
    }

    // Optional feedback icon
    .form-control-feedback {
        color: @text-colour;
    }
}

//
// Responsive visibility
// ---
.responsive-visibility() {
    display: block !important;
    table&  { display: table !important; }
    tr&     { display: table-row !important; }
    th&,
    td&     { display: table-cell !important; }
}

.responsive-invisibility() {
    display: none !important;
}

//
// Margins
// ---
.margins(@top, @right, @bottom, @left) {
    margin: ( @font-size-base * @top ) ( @font-size-base * @right ) ( @font-size-base * @bottom ) ( @font-size-base * @left );
    margin: ~"@{top}rem" ~"@{right}rem" ~"@{bottom}rem" ~"@{left}rem"
}

//
// Text
// ---
// Font rule mixin with pixel fallback
.font-size(@size) {
    font-size: ( @font-size-base * @size );
    font-size: ~"@{size}rem";
}

.small() {
    font-size: .75em;
}

.meta() {
    .font-size(.875);
    color: @colour-grey-light;
}

.lead() {
    .font-size(1.3);
    font-weight: @font-weight-weak;
}

.text-hide() {
    font: ~"0/0" a;
    color: transparent;
    text-shadow: none;
    background-color: transparent;
    border: 0;
}

//
// Images
// ---
.img-responsive(@display: block) {
    display: @display;
    max-width: 100%; // Part 1: Set a maximum relative to the parent
    height: auto; // Part 2: Scale the height according to the width, otherwise you get stretching
}

//
// Icons
// ---
.icon() {
    font-family: FontAwesome;
    font-style: normal;
    font-weight: normal;
    speak: none;
    display: inline;
    text-decoration: inherit;
    width: 1em;
    text-align: center;
    font-variant: normal;
    text-transform: none;
    line-height: 1em;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

// Used in bespoke loading icon animation
.icon-loading-format() {
    display: inline-block;
    border-radius: 100%;
    margin-left: 0;
    .square(1em);
    .animation(icon-loading .6s infinite);
    .transition-duration(.2s);
}

//
// Alert variants
// ---
.alert-variant(@icon-unicode, @background, @text-colour) {
    background-color: lighten(@background, 2.5%);
    color: @text-colour;
    border-left: 5px solid darken(@background, 10%);

    a {
        text-decoration: underline;
        color: darken(@text-colour, 10%);

        &:focus,
        &:active {
            .tab-focus(@text-colour);
        }
    }

    .close {
        color: darken(@text-colour, 10%);

        &:hover,
        &:focus {
            background-color: @text-colour;
            color: @colour-white;
        }
    }

    &:before {
        content: @icon-unicode;
    }
}

//
// Improve alignment and spacing of inner content
// ---
.inner-content-fix() {
    & > :first-child {
        margin-top: 0;
    }

    & > :last-child {
        margin-bottom: 0;
    }
}

//
// Standardised shadows
// ---
.drop-shadow() {
    .inside(@depth: @dimension-shadow-lg) {
        .box-shadow(inset 0 @depth @depth fade(@colour-black, 25%));
    }

    .outside(@depth: @dimension-shadow-lg) {
        .box-shadow(0 @depth @depth fade(@colour-black, 25%));
    }
}

//
// Positioning
// ---
.position(@position: absolute, @top, @right, @bottom, @left) {
    position: @position;

    & when (isnumber(@top)), (@top = auto) {
        top: @top;
    }

    & when (isnumber(@right)), (@right = auto) {
        right: @right;
    }

    & when (isnumber(@bottom)), (@bottom = auto) {
        bottom: @bottom;
    }

    & when (isnumber(@left)), (@left = auto) {
        left: @left;
    }
}

//
// Off-screen menu
// ---
.off-screen-menu-transition() {
    .transition-transform(@off-screen-transition-duration);
}

//
// Vendor prefixes
// ---

// The bootstrap mixin for transition does not vendor prefix the transition property
// This allows us to specify a transition directly for transform with vendor prefixes
.transition-transform(@duration: 0.2s, @animtation: ease-in-out ) {
  -webkit-transition: -webkit-transform @duration @animtation;
     -moz-transition: -moz-transform @duration @animtation;
       -o-transition: -o-transform @duration @animtation;
          transition: transform @duration @animtation;
}

.off-screen-text-link() {
    display: block;
    padding-top: @dimension-padding-lg;
    padding-bottom: @dimension-padding-lg;
    padding-left: @dimension-padding-lg;
    .font-size(1);

    &:hover,
    &:focus,
    &:active {
        .tab-focus(@colour-grey-lightest, @text-colour);
        .focus-reset();
    }
}

