// Grab bootsrap mixins
@import "../../node_modules/bootstrap/less/mixins";

//
//  States
// ---
.tab-focus(@colour: @colour-accent) {
    outline: 3px solid @colour;
    outline-offset: 0;
    background-color: @colour;
    color: @colour-white;
    text-decoration: none;
}

.button-focus(@colour: @colour-accent) {
    outline: 2px auto @colour;
    outline-offset: -2px;
    .box-shadow(0 0 8px @colour-accent);
}

.button-active(@colour: @colour-grey-lighter) {
    .box-shadow(inset 0 1px 4px @colour);
}

.form-control-focus(@colour: @colour-accent) {
    border-color: @colour;
    outline: 4px auto @colour;
    outline-offset: -2px;
}

//
// state resets
// ---
.focus-reset() {
    outline: none;
    .box-shadow(none);
}

.panel-link-reset() {
    color: @text-colour;
    font-weight: @font-weight-base;

    &:hover,
    &:focus {
        outline: none;
        text-decoration: none;
        background-color: @colour-white;
        border-color: @link-colour;
        color: @text-colour;
    }
}

//
// Lists
// ---
.list-unstyled() {
    list-style: none;
    padding: 0;

    li {
        &:before {
            display: none;
        }
    }
}

// Inline turns list items into inline-block
.list-inline() {
    .list-unstyled();
    display: inline-block;

    li {
        display: inline-block;
        padding: 0;
        .margins(0.5, 0, 0.5, 0);

        &:before {
            display: none;
        }
    }
}

//
// Sub navs
// ---
.nav-item-style(@text: @nav-text-colour, @hover-text: @nav-text-colour, @bg: @nav-hover-bg-colour, @focus: @nav-focus-colour) {
    border: 1px solid transparent;
    color: @text;

    &:hover,
    &:focus {
        color: @hover-text;
        background: @bg;
        border: 1px solid @bg;
    }

    &:focus {
        border: 1px solid @focus;
    }
}

.nav-item-style-active(@text: @colour-white, @hover-text: @colour-white, @bg: @colour-brand, @hover-bg: @colour-brand, @border: @colour-brand, @focus: @colour-brand) {
    color: @text;
    background: @bg;
    border: 1px solid @border;

    &:hover,
    &:focus {
        color: @hover-text;
        background: @hover-bg;
        border: 1px solid @border;
    }

    &:focus {
        border: 1px solid @focus;
    }
}

//
// Buttons
// ---
.button-style(@colour: @colour-grey-lightest, @text: @text-colour) {
    @colour-dark: darken(@colour, 5%);
    @colour-light: lighten(@colour, 8%);
    color: @text;
    border: 1px solid @colour-dark;
    #gradient > .vertical(@colour-light, @colour);
    border-radius: @dimension-border-radius;
    .box-shadow(inset 0 -.1em 0 @colour-dark);

    &:hover,
    &:focus {
        #gradient > .vertical(darken(@colour-light, 4%), @colour-dark);
        color: @text;
    }

    &:focus {
        .button-focus(@colour-dark);
    }

    &:active {
        .button-active(@colour-dark);
    }

    &.button--active {
        #gradient > .vertical(darken(@colour-light, 4%), @colour-dark);
        .button-active(@colour-dark);
        color: @text;
        pointer-events: none;
    }
}

.button-block() {
    display: block;
    width: 100%;
}

.button-block-reset() {
    display: inline-block;
    width: auto;
}

.button-icon(@icon-code: "\e817") {
    position: relative;
    padding-right: 2em;

    &:after {
        content: @icon-code;
        .icon();
        .backface-visibility(hidden);
        .transition(all 0.2s ease-out);
        .opacity(0.8);
        position: absolute;
        top: 0.75em;
        right: 0.5em;
    }

    &:hover,
    &:focus {
        &:after {
            .opacity(1);
        }
    }
}

//
// Form states
// ---
.form-control-validation(@text-colour: @text-colour; @border-colour: #ccc; @background-color: #f5f5f5) {
    // Color the label and help text
    label,
    .form-group__help-block,
    .radio,
    .checkbox,
    .radio-inline,
    .checkbox-inline,
    &.radio label,
    &.checkbox label,
    &.radio-inline label,
    &.checkbox-inline label  {
        color: @text-colour;
    }

    // Set the border and box shadow on specific inputs to match
    .form-control {
        border-color: @border-colour;
        .box-shadow(inset 0 1px 1px rgba(0,0,0,.075)); // Redeclare so transitions work

        &:focus {
            border-color: darken(@border-colour, 10%);
            @shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 6px lighten(@border-colour, 20%);
            .box-shadow(@shadow);
        }
    }

    // Optional feedback icon
    .form-control-feedback {
        color: @text-colour;
    }
}

//
// Responsive visibility
// ---
.responsive-visibility() {
    display: block !important;
    table&  { display: table !important; }
    tr&     { display: table-row !important; }
    th&,
    td&     { display: table-cell !important; }
}

.responsive-invisibility() {
    display: none !important;
}

//
// Margins
// ---
.margins(@top, @right, @bottom, @left) {
    margin: ( @font-size-base * @top ) ( @font-size-base * @right ) ( @font-size-base * @bottom ) ( @font-size-base * @left );
    margin: ~"@{top}rem" ~"@{right}rem" ~"@{bottom}rem" ~"@{left}rem"
}


//
// Text
// ---
// Font rule mixin with pixel fallback
.font-size(@size) {
    font-size: ( @font-size-base * @size );
    font-size: ~"@{size}rem";
}

.small() {
    font-size: 85%;
}

.lead() {
    .font-size(1.3);
    font-weight: @font-weight-weak;
}

.text-hide() {
    font: ~"0/0" a;
    color: transparent;
    text-shadow: none;
    background-color: transparent;
    border: 0;
}

//
// Images
// ---
.img-responsive(@display: block) {
    display: @display;
    max-width: 100%; // Part 1: Set a maximum relative to the parent
    height: auto; // Part 2: Scale the height according to the width, otherwise you get stretching
}

//
// Icons
// ---
.icon() {
    font-family: "pistachio-icon-font";
    font-style: normal;
    font-weight: normal;
    speak: none;
    display: inline;
    text-decoration: inherit;
    width: 1em;
    text-align: center;
    font-variant: normal;
    text-transform: none;
    line-height: 1em;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

// used in bespoke loading icon animation
.icon-loading-format() {
    display: inline-block;
    border-radius: 100%;
    margin-left: 0;
    .square(1em);
    .animation(icon-loading .6s infinite);
    .transition-duration(.2s);
}

//
// Alert variants
// ---
.alert-variant(@icon-unicode, @background, @text-colour) {
    background-color: lighten(@background, 2.5%);
    color: @text-colour;
    border-left: 5px solid darken(@background, 10%);

    a {
        text-decoration: underline;
        color: darken(@text-colour, 10%);

        &:focus,
        &:active {
            .tab-focus(@text-colour);
        }
    }

    .close {
        color: darken(@text-colour, 10%);

        &:hover,
        &:focus {
            background-color: @text-colour;
            color: @colour-white;
        }
    }

    &:before {
        content: @icon-unicode;
    }
}

//
// Improve alignment and spacing of inner content
// ---
.inner-content-fix() {
    & > :first-child {
        margin-top: 0;
    }

    & > :last-child {
        margin-bottom: 0;
    }
}
